openapi: 3.0.0
info:
  title: Book Management API
  version: 1.0.0
  description: API for managing books (CRUD) with MongoDB backend.
servers:
  - url: http://localhost:3545
    description: Local development server
paths:
  /api/books:
    get:
      summary: Get all books
      responses:
        '200':
          description: List of books
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Book'
    post:
      summary: Add a new book
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '201':
          description: Book created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
  /api/books/{id}:
    get:
      summary: Get a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    put:
      summary: Update a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookInput'
      responses:
        '200':
          description: Book updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Book'
        '404':
          description: Book not found
    delete:
      summary: Delete a book by ID
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Book deleted
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Book deleted successfully
        '404':
          description: Book not found
components:
  schemas:
    Book:
      type: object
      properties:
        _id:
          type: string
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        publishedYear:
          type: integer
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    BookInput:
      type: object
      required:
        - title
        - author
        - genre
        - publishedYear
      properties:
        title:
          type: string
        author:
          type: string
        genre:
          type: string
        publishedYear:
          type: integer 